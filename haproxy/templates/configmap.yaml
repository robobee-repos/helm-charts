{{- if not .Values.existingConfigmap }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: haproxy
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  haproxy.cfg: |
    {{- include "haproxy.configuration.global" . | nindent 4 }}
    {{- include "haproxy.configuration.defaults" . | nindent 4 }}
    {{- if (and (.Capabilities.APIVersions.Has "monitoring.coreos.com/v1" ) (.Values.metrics.enabled) (.Values.metrics.serviceMonitor.enabled)) -}}
    {{- include "haproxy.configuration.prometheus" . | nindent 4 }}
    {{- end }}
    {{- if .Values.ingressHttp }}
    frontend http-in
        bind            :80 name node-http
        mode            http
        redirect scheme https code 301 unless { path_beg /.well-known/acme-challenge/ }
        default_backend nodes-http
    backend nodes-http
        mode            http
        balance         roundrobin
        option          forwardfor
        http-request    set-header X-Forwarded-Port %[dst_port]
        http-request    add-header X-Forwarded-Proto https if { ssl_fc }
        server          ingress01-http {{ .Values.ingressHttp.server }}:{{ .Values.ingressHttp.port }} check inter {{ default .Values.defaultCheckInterval .Values.ingressHttp.checkInterval }} send-proxy
    {{- end }}
    {{- if .Values.ingressHttps }}
    frontend https-in
        bind            :443 name node-https
        mode            tcp
        option          tcplog
        tcp-request     inspect-delay 5s
        tcp-request     content accept if { req.ssl_hello_type 1 }
        acl proto_tls   req.ssl_hello_type 1
        use_backend     nodes-https if proto_tls
        default_backend nodes-https
    backend nodes-https
        mode            tcp
        stick-table     type ip size 512k expire 30m
        stick on        dst
        balance         roundrobin
        server          ingress01-https {{ .Values.ingressHttps.server }}:{{ .Values.ingressHttps.port }} check inter {{ default .Values.defaultCheckInterval .Values.ingressHttps.checkInterval }} send-proxy
    {{- end }}
    {{- if .Values.sshHttp }}
    frontend ssh-in
        bind            :22 name node-ssh
        mode            tcp
        option          tcplog
        default_backend nodes-ssh
    backend nodes-ssh
        mode            tcp
        stick-table     type ip size 512k expire 30m
        stick on        dst
        balance         roundrobin
        retries         3
        server          ingress01-ssh {{ .Values.ingressSsh.server }}:{{ .Values.ingressSsh.port }} check inter {{ default .Values.defaultCheckInterval .Values.ingressSsh.checkInterval }}
    {{- end }}
  dhparam: |
    {{- (.Files.Get "files/dhparam.txt") | nindent 4 }}
  400.http: |
    {{- (.Files.Get "files/400.http") | nindent 4 }}
  403.http: |
    {{- (.Files.Get "files/403.http") | nindent 4 }}
  408.http: |
    {{- (.Files.Get "files/408.http") | nindent 4 }}
  500.http: |
    {{- (.Files.Get "files/500.http") | nindent 4 }}
  502.http: |
    {{- (.Files.Get "files/502.http") | nindent 4 }}
  503.http: |
    {{- (.Files.Get "files/503.http") | nindent 4 }}
  504.http: |
    {{- (.Files.Get "files/504.http") | nindent 4 }}
{{- end }}
