---
# Source: haproxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
  namespace: "default"
  labels:
    app.kubernetes.io/name: haproxy
    helm.sh/chart: haproxy-1.0.2
    app.kubernetes.io/instance: haproxy
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: haproxy
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: haproxy
      app.kubernetes.io/instance: haproxy
      app.kubernetes.io/component: haproxy
  template:
    metadata:
      annotations:
        checksum/configmap: 791f8ac850b88965133f46ebe565e8a485d08d87673820703df08a25a00a7a84
      labels:
        app.kubernetes.io/name: haproxy
        helm.sh/chart: haproxy-1.0.2
        app.kubernetes.io/instance: haproxy
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: haproxy
    spec:
      serviceAccountName: haproxy-foo
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: haproxy
                    app.kubernetes.io/instance: haproxy
                    app.kubernetes.io/component: haproxy
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 99
      containers:
        - name: haproxy
          image: docker.io/robobeerun/kube-haproxy:2.5-r1
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 99
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          - name: ssh
            containerPort: 22
          env:
          envFrom:
          resources:
            limits: {}
            requests: {}
          livenessProbe:
            # Using exec instead of tcpSocket to avoid noise in te logs
            exec:
              command:
                - pgrep
                - haproxy
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            # Using exec instead of tcpSocket to avoid noise in te logs
            exec:
              command:
                - pgrep
                - haproxy
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - name: haproxy-conf
              mountPath: /usr/local/etc/haproxy
      volumes:
        - name: haproxy-conf
          configMap:
            name: haproxy
